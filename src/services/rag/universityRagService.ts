import { findRelevantChunks, createPromptWithContext, hasRelevantInformation } from './ragService';
import { ChatMessage } from '@/utils/types';

/**
 * –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ø–æ–∏—Å–∫–∞ –≤ RAG-—Å–∏—Å—Ç–µ–º–µ
 */
interface RagSearchResult {
  chunks: string[];
  hasRelevantData: boolean;
  source: 'rag' | 'tavily' | 'default';
}

/**
 * –ö–ª–∞—Å—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å RAG-—Å–∏—Å—Ç–µ–º–æ–π –¢—é–º–ì–£ –ø–æ –¥–∞–Ω–Ω—ã–º –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
 */
export class UniversityRagService {
  /**
   * –ü–æ–∏—Å–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ RAG-—Å–∏—Å—Ç–µ–º–µ
   * @param query –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞
   */
  public static async searchRag(query: string): Promise<RagSearchResult> {
    console.log('üîç –ü–æ–∏—Å–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞:', query);
    
    try {
      // –ù–∞—Ö–æ–¥–∏–º —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ —á–∞–Ω–∫–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É (–∏–∑ –≤—Å–µ—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤)
      const relevantChunks = await findRelevantChunks(query, 5);
      console.log(`üìä –ù–∞–π–¥–µ–Ω–æ ${relevantChunks.length} —á–∞–Ω–∫–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É`);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∞—Ç –ª–∏ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —á–∞–Ω–∫–∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      const hasRagData = hasRelevantInformation(relevantChunks, query);
      console.log('üìù –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é:', hasRagData);
      
      return {
        chunks: relevantChunks,
        hasRelevantData: hasRagData,
        source: hasRagData ? 'rag' : 'default'
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ RAG:', error);
      return {
        chunks: [],
        hasRelevantData: false,
        source: 'default'
      };
    }
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è GPT —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ª–∏—Å—Ç–æ–≤ Excel
   * @param query –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param chunks –ù–∞–π–¥–µ–Ω–Ω—ã–µ —á–∞–Ω–∫–∏
   * @returns –ü—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –º–æ–¥–µ–ª—å
   */
  public static createUniversityPrompt(query: string, chunks: string[]): string {
    if (chunks.length === 0) {
      return this.createDefaultPrompt(query);
    }
    
    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —á–∞–Ω–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    const context = chunks.join('\n\n');
    
    return `–¢—ã - –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¢—é–º–µ–Ω—Å–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Ç–æ—á–Ω–æ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏, –æ–ø–∏—Ä–∞—è—Å—å –¢–û–õ–¨–ö–û –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.

–ò–ù–§–û–†–ú–ê–¶–ò–Ø –ò–ó –ë–ê–ó–´ –ó–ù–ê–ù–ò–ô:
${context}

–ó–ê–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: ${query}

–ü–†–ê–í–ò–õ–ê –û–¢–í–ï–¢–ê:
1. –ò—Å–ø–æ–ª—å–∑—É–π –¢–û–õ–¨–ö–û –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞.
2. –ï—Å–ª–∏ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞, —á–µ—Å—Ç–Ω–æ —Å–∫–∞–∂–∏ –æ–± —ç—Ç–æ–º. –ù–µ –¥–æ–¥—É–º—ã–≤–∞–π —Ñ–∞–∫—Ç—ã.
3. –í—Å–µ–≥–¥–∞ —É–∫–∞–∑—ã–≤–∞–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (–ª–∏—Å—Ç Excel, –µ—Å–ª–∏ —ç—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–æ –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞).
4. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ, —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ –∏ –ø–æ –¥–µ–ª—É.
5. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –¥–ª–∏–Ω–Ω—ã–µ –≤–≤–æ–¥–Ω—ã–µ —Ñ—Ä–∞–∑—ã. –°—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ –æ—Ç–≤–µ—Ç—É.
6. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è —Ä–∞–∑–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º (–±–∞–∫–∞–ª–∞–≤—Ä–∏–∞—Ç, –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä–∞, –≥–∏–º–Ω–∞–∑–∏—è, –°–ü–û), —á–µ—Ç–∫–æ —Ä–∞–∑–¥–µ–ª—è–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–∞–∂–¥–æ–π –ø—Ä–æ–≥—Ä–∞–º–º–µ.

–¢–≤–æ–π –æ—Ç–≤–µ—Ç:`;
  }

  /**
   * –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ RAG-–¥–∞–Ω–Ω—ã—Ö
   * @param query –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns –ü—Ä–æ–º–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –º–æ–¥–µ–ª—å
   */
  private static createDefaultPrompt(query: string): string {
    return `–¢—ã - –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¢—é–º–µ–Ω—Å–∫–æ–≥–æ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ–≥–∞—Ç—å –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–∞–º –∏ —Å—Ç—É–¥–µ–Ω—Ç–∞–º —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–µ.

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –º–µ–Ω—è –Ω–µ—Ç —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–≤–æ–µ–º—É –∑–∞–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö. –Ø –º–æ–≥—É –¥–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–±—â—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ—Ç–æ—á–Ω–æ–π –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–≤—à–µ–π.

–ó–ê–ü–†–û–° –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: ${query}

–ü–†–ê–í–ò–õ–ê –û–¢–í–ï–¢–ê:
1. –ß–µ—Å—Ç–Ω–æ –ø—Ä–∏–∑–Ω–∞–π, —á—Ç–æ —É —Ç–µ–±—è –Ω–µ—Ç —Ç–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —ç—Ç–æ–º—É –≤–æ–ø—Ä–æ—Å—É –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
2. –ü—Ä–µ–¥–ª–æ–∂–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø—Ä–∏–µ–º–Ω—É—é –∫–æ–º–∏—Å—Å–∏—é –¢—é–º–ì–£ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
3. –£–∫–∞–∂–∏ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏–µ–º–Ω–æ–π –∫–æ–º–∏—Å—Å–∏–∏: —Ç–µ–ª–µ—Ñ–æ–Ω +7 (3452) 59-74-29, email: abiturient@utmn.ru.
4. –ï—Å–ª–∏ —ç—Ç–æ —É–º–µ—Å—Ç–Ω–æ, –ø—Ä–µ–¥–ª–æ–∂–∏ –∑–∞–π—Ç–∏ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Å–∞–π—Ç –¢—é–º–ì–£ (https://www.utmn.ru).
5. –ù–µ –ø—Ä–∏–¥—É–º—ã–≤–∞–π —Ñ–∞–∫—Ç—ã –∏ –Ω–µ –¥–∞–≤–∞–π –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–µ–≤–µ—Ä–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.

–¢–≤–æ–π –æ—Ç–≤–µ—Ç:`;
  }

  /**
   * –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –º–æ–¥–µ–ª—å
   * @param query –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @param history –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
   * @param chunks –ù–∞–π–¥–µ–Ω–Ω—ã–µ —á–∞–Ω–∫–∏
   * @returns –ú–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –º–æ–¥–µ–ª—å
   */
  public static prepareMessages(query: string, history: ChatMessage[], chunks: string[]): ChatMessage[] {
    // –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ RAG
    const systemPrompt = this.createUniversityPrompt(query, chunks);
    
    // –°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ API
    let messages: ChatMessage[] = [
      { role: 'system', content: systemPrompt },
      ...history.filter((m: ChatMessage) => m.role !== 'system')
    ];
    
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏
    if (!messages.some((m: ChatMessage) => m.role === 'user' && m.content === query)) {
      messages.push({ role: 'user', content: query });
    }
    
    return messages;
  }
}
